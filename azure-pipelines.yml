# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

parameters:
  - name: VMScaleSetName
    default: "ngnixVmScaleSet"

steps:

- task: NodeTool@0
  displayName: "Install matching Node version"
  inputs:
    versionSpec: '10.x'

- task: Npm@1
  displayName: "Install software dependencies"
  inputs:
    command: 'install'
    workingDir: 'NodejsWebApp1'

- task: gulp@0
  displayName: "Invoke gulpfile.js"
  inputs:
    gulpFile: 'NodejsWebApp1/gulpfile.js'
    targets: 
    gulpjs: 'node_modules/gulp/bin/gulp.js'
    enableCodeCoverage: false

- task: Npm@1
  displayName: "Run automated tests"
  inputs:
    command: 'custom'
    workingDir: 'NodejsWebApp1'
    customCommand: 'test'

- task: PublishBuildArtifacts@1
  displayName: "Publish build artifact"
  inputs:
    PathtoPublish: 'NodejsWebApp1'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: PackerBuild@1
  displayName: "Bake immutable image for VMSS"
  inputs:
    templateType: 'builtin'
    ConnectedServiceName: 'devops-test'
    isManagedImage: true
    managedImageName: 'customManagedImage'
    location: 'westeurope'
    storageAccountName: 'customimagestore321'
    azureResourceGroup: 'rg-vmss-workshop'
    baseImageSource: 'default'
    baseImage: 'Canonical:UbuntuServer:18.04-LTS:linux'
    packagePath: '$(System.DefaultWorkingDirectory)/Packer-NodeJs/drop'
    deployScriptPath: 'Deploy/ubuntu/deployNodejsApp.sh'
    imageUri: 'bakedImageUrl'

- task: AzureVmssDeployment@0
  displayName: "Update VMSS with freshly baked image"
  inputs:
    azureSubscription: 'devops-test'
    action: 'Update image'
    vmssName: ${{ parameters.VMScaleSetName }}
    vmssOsType: 'Linux'
    imageUrl: '$(bakedImageUrl)'